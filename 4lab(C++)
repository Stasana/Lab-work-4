#include <iostream>

using namespace std;

class Devices
{
    public:
        virtual double Out()
        {
                    return 0;
        }
    
        virtual int Get()
        {
                    return 0;
        }
};

class Analogue : public Devices
{
    public:
        virtual double Out()
            {
                return 0;
            }
                virtual int Get()
            {
                return 0;
            }
};

class  OperAmpilifier : public Analogue
{
    public:
    int Get()
    {
        cout << "Введіть напругу неiнвертуючого входу:";
        cin >> NonInvertedOut;
        
        cout << "Введіть напругу iнвертуючого входу:";
        cin >> InvertedOut;
        
        cout << "Введіть коефіцiєнт підсилення:";
        cin >> AmplifiyingKoef;
        
        OutputVoltage = (NonInvertedOut-InvertedOut)*AmplifiyingKoef;
        return 0;
    }
    double Out()
    {
        return OutputVoltage;
    }
    private:
    int InvertedOut,NonInvertedOut, AmplifiyingKoef, OutputVoltage;
};

class Digital : public Devices
{
    public:
    virtual int Get()
    {
        return 0;
    }
};

class Decoder : public Digital
{
    public:
    int Get()
    {
        cout << "Введіть n-розрядний код:";
        return 0;
    }
    private:
};

class BinaryAdder : public Digital
{
    public:
    int Get()
        {
            cout << "Введіть інформаційні сигнали:";
            return 0;
        }
    private:
};

class Impulse : public Devices
 {
    public:
    virtual double Out()
    {
        return 0;
    }
    virtual int Get()
    {
        return 0;
    }
};

class SourceVoltage : public Impulse
{
    public:
    int Get()
    {
        cout << "Введіть силу струму:";
        cin >> Amperage;
        
        cout << "Введіть опiр:";
        cin >> Resistance;
        
        Voltage = Amperage*Resistance;
    }
    double Out()
    {
        return Voltage;
    }
    private:
    int Amperage, Resistance, Voltage;
    };

class CurrentSource : public Impulse
{
    int Get()
    {
        cout << "Введіть напругу:";
        cin >> Voltage;
        
        cout << "Введіть опiр:";
        cin >> Resistance;
        
        Amperage=Voltage/Resistance;
    }
    double Out()
    {
        return Amperage;
    }
    private:
    int Amperage, Resistance, Voltage;
};



int main()
{
    setlocale (LC_ALL,"Ukrainian");
    
    cout << "Виберіть пристрiй:" << endl;
    cout << "1. Операцiйний пiдсилювач" << endl;
    cout << "2. Дешифратор двiйково-дестяковий" << endl;
    cout << "3. Двiйковий суматор" << endl;
    cout << "4. Джерело напруги" << endl;
    cout << "5. Джерело струму" << endl;
    
    int choise;
    cin >> choise;
    if (choise == 1)
    {
        Analogue *ptr1 = new OperAmpilifier;
        ptr1->Get();
        cout << (ptr1->Out()) << endl;
    }
    else if (choise == 2)
    {
        Digital *ptr2 = new Decoder;
        ptr2->Get();
        cout << (ptr2->Get()) << endl;
    }
    else if (choise == 3)
    {
        Digital *ptr3 = new BinaryAdder;
        ptr3->Get();
        cout << (ptr3->Get()) << endl;
    }
    else if (choise == 4)
    {
        Impulse *ptr4 = new SourceVoltage;
        ptr4->Get();
        cout << (ptr4->Out()) << endl;
    }
    else if (choise == 5)
    {
        Impulse *ptr5 = new SourceVoltage;
        ptr5->Get();
        cout << (ptr5->Out()) << endl;
    }
    else{
    cout << "Number is not valid" <<endl;
    return 0;
    }
}
